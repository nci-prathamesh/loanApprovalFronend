[{"/workspaces/loanApprovalFronend/src/index.js":"1","/workspaces/loanApprovalFronend/src/App.js":"2","/workspaces/loanApprovalFronend/src/reportWebVitals.js":"3","/workspaces/loanApprovalFronend/src/layout/Navbar.js":"4","/workspaces/loanApprovalFronend/src/pages/Home.js":"5","/workspaces/loanApprovalFronend/src/pages/LoginForm.js":"6","/workspaces/loanApprovalFronend/src/users/UpdateUser.js":"7","/workspaces/loanApprovalFronend/src/users/ViewUser.js":"8","/workspaces/loanApprovalFronend/src/users/AddUser.js":"9","/workspaces/loanApprovalFronend/src/users/LoanApplication.js":"10","/workspaces/loanApprovalFronend/src/users/viewApplications.js":"11","/workspaces/loanApprovalFronend/src/users/AdminView.js":"12","/workspaces/loanApprovalFronend/src/users/AdminUserDetails.js":"13"},{"size":535,"mtime":1682029244244,"results":"14","hashOfConfig":"15"},{"size":1387,"mtime":1682029244240,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1682029244244,"results":"17","hashOfConfig":"15"},{"size":742,"mtime":1682031100896,"results":"18","hashOfConfig":"15"},{"size":2537,"mtime":1682029244244,"results":"19","hashOfConfig":"15"},{"size":3663,"mtime":1682029244244,"results":"20","hashOfConfig":"15"},{"size":4416,"mtime":1682029244244,"results":"21","hashOfConfig":"15"},{"size":5561,"mtime":1682029244244,"results":"22","hashOfConfig":"15"},{"size":12384,"mtime":1682029244244,"results":"23","hashOfConfig":"15"},{"size":9638,"mtime":1682029244244,"results":"24","hashOfConfig":"15"},{"size":5171,"mtime":1682029244244,"results":"25","hashOfConfig":"15"},{"size":1964,"mtime":1682029244244,"results":"26","hashOfConfig":"15"},{"size":5325,"mtime":1682029244244,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1yqkkgu",{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},"/workspaces/loanApprovalFronend/src/index.js",[],[],"/workspaces/loanApprovalFronend/src/App.js",["77"],[],"import './App.css';\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\"\nimport Navbar from './layout/Navbar';\nimport Home from './pages/Home';\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport AddUser from './users/AddUser';\nimport UpdateUser from './users/UpdateUser';\nimport ViewUser from './users/ViewUser';\nimport LoginForm from './pages/LoginForm';\nimport LoanApplication from './users/LoanApplication';\nimport ViewApplications from './users/viewApplications';\nimport AdminView from './users/AdminView';\nimport AdminUserDetails from './users/AdminUserDetails';\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      <Router>\n        <Navbar />\n        <Routes>\n          <Route exact path=\"/\" element={<LoginForm/>}/>\n          <Route exact path=\"/loanapplication/:userId\" element={<LoanApplication/>}/>\n          <Route exact path=\"/viewloanapplication/:applicationId\" element={<ViewApplications/>}/>\n          <Route exact path=\"/viewuser/:id\" element={<ViewUser/>}/>\n          <Route exact path=\"/adminView/:id\" element={<AdminView/>}/>\n          <Route exact path=\"/adminUserDetails/:id\" element={<AdminUserDetails/>}/>\n          <Route exact path=\"/adduser\" element={<AddUser/>}/>\n          <Route exact path=\"/updateuser/:id\" element={<UpdateUser/>}/>\n        </Routes>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","/workspaces/loanApprovalFronend/src/reportWebVitals.js",[],[],"/workspaces/loanApprovalFronend/src/layout/Navbar.js",["78"],[],"/workspaces/loanApprovalFronend/src/pages/Home.js",["79"],[],"import React, { useEffect, useState } from 'react'\r\nimport axios from \"axios\";\r\nimport { Link, useParams } from 'react-router-dom';\r\n\r\nexport default function Home() {\r\n    const [users, setUsers] = useState([]);\r\n    const { id } = useParams();\r\n\r\n    useEffect(() => {\r\n        loadUsers();\r\n    }, []);\r\n\r\n    const loadUsers = async () => {\r\n        const result = await axios.get(\"http://localhost:8080/user/users\");\r\n        console.log(result.data);\r\n        setUsers(result.data);\r\n    };\r\n    const deleteUser = async (id) => {\r\n        await axios.delete(`http://localhost:8080/user/user/${id}`);\r\n        loadUsers();\r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div className='py-4'>\r\n                <table className=\"table border shadow table-primary table-striped\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">id</th>\r\n                            <th scope=\"col\">First Name</th>\r\n                            <th scope=\"col\">Middle Name</th>\r\n                            <th scope=\"col\">Last Name</th>\r\n                            <th scope=\"col\">Actions</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            users.map((user, index) => (\r\n                                <tr>\r\n                                    <th scope=\"row\">{user.id}</th>\r\n                                    <td>{user.userFirstName}</td>\r\n                                    <td>{user.userMiddleName}</td>\r\n                                    <td>{user.userLastName}</td>\r\n                                    <td>\r\n                                        <Link type=\"button\" className=\"btn btn-primary mx-2\"\r\n                                            to={`/viewuser/${user.id}`}>View</Link>\r\n                                        <Link type=\"button\" className=\"btn btn-outline-primary mx-2\"\r\n                                            to={`/updateuser/${user.id}`}>Update</Link>\r\n                                        <button type=\"button\" className=\"btn btn-danger mx-2\"\r\n                                            onClick={() => deleteUser(user.id)}\r\n                                        >Delete</button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))\r\n                        }\r\n\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","/workspaces/loanApprovalFronend/src/pages/LoginForm.js",["80","81","82","83","84"],[],"import axios from 'axios';\r\nimport React, { useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\n\r\nexport default function AddUser() {\r\n\r\n    let navigate = useNavigate();\r\n    const [useridCheck, setUseridCheck] = useState(\"\");\r\n    const [validUser, setvalidUser] = useState(\"false\");\r\n\r\n    const [useridValidationMessage, setUseridValidationMessage] = useState(\"\");\r\n\r\n    const [user, setUser] = useState({\r\n        userId: \"\",\r\n        password: \"\"\r\n    });\r\n\r\n    function reset(e) {\r\n        e.preventDefault();\r\n        setUser({ userId: \"\", password: \"\" });\r\n      }\r\n\r\n      const onInputChange = (e) => {\r\n        setUser({\r\n            ...user, [e.target.name]: e.target.value\r\n        });\r\n    };\r\n\r\n    \r\n\r\n    const { userId,password } = user;\r\n\r\n    function onSubmit(e){\r\n        console.log(e);\r\n        e.preventDefault();\r\n        loadUser(e.target[0].value,e.target[1].value);\r\n    };\r\n\r\n    async function loadUser(userId,password){\r\n        console.log(userId);\r\n        const result = await axios.get(`http://localhost:8080/user/login/${userId}/${password}`);\r\n        console.log(result.data.u);\r\n        setUser(result.data);\r\n        if(result.data.userType==\"1\"){\r\n            navigate(`/adminView/${result.data.id}`);\r\n        }\r\n        else{\r\n            navigate(`/viewuser/${result.data.id}`);\r\n        }\r\n        \r\n    };\r\n    return (\r\n        <div className='container'>\r\n            <div className='row'>\r\n                <div className='col-md-6 offset-md-3 border rounded p-4 mt-2 shadow'>\r\n                    <h2 className='fw-semibold text-primary text-center'> Login Here</h2>\r\n                    <form onSubmit={(e) => onSubmit(e)}>\r\n                        <div className='form-floating mb-3'>\r\n                            <input type={\"text\"}\r\n                                className=\"form-control\"\r\n                                placeholder='Enter your first name'\r\n                                name='userId'\r\n                                value={userId}\r\n                                onChange={(e) => onInputChange(e)}\r\n                            />\r\n                            <label htmlFor='userFirstName' className='form-label'>\r\n                                Enter UserId\r\n                            </label>\r\n                            <p style={{backgroundColor: useridCheck}}>{useridValidationMessage}</p>\r\n                        </div>\r\n                        <div className='form-floating mb-3'>\r\n                            <input type={\"password\"}\r\n                                className=\"form-control\"\r\n                                placeholder='Enter your first name'\r\n                                name='password'\r\n                                value={password}\r\n                                onChange={(e) => onInputChange(e)}\r\n                            />\r\n                            <label htmlFor='userFirstName' className='form-label'>\r\n                                Enter Password\r\n                            </label>\r\n                        </div>\r\n                        <button name=\"submit\" type=\"submit\" className='btn btn-outline-primary mx-2'>Sign In</button>\r\n                        <button name=\"submit\" to=\"/adduser\" className='btn btn-outline-primary mx-2'>Sign Up</button>\r\n                        <button name=\"cancel\" type=\"reset\" to=\"/\" onClick={reset} className='btn btn-outline-secondary mx-2'>Cancel</button>\r\n                        <Link className=\"btn btn-outline-light\" to=\"/adduser\">Add User</Link>\r\n                    </form>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","/workspaces/loanApprovalFronend/src/users/UpdateUser.js",["85"],[],"import axios from 'axios';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Link, useNavigate, useParams } from 'react-router-dom';\r\n\r\nexport default function UpdateUser() {\r\n\r\n    let navigate = useNavigate();\r\n\r\n    const { id } = useParams();\r\n\r\n    const [user, setUser] = useState({\r\n        userFirstName: \"\",\r\n        userMiddleName: \"\",\r\n        userLastName: \"\",\r\n        userGender: \"\",\r\n        phoneNumber:\"\",\r\n        email:\"\",\r\n        userType:\"\"\r\n    });\r\n\r\n    const { userFirstName, userMiddleName, userLastName, userGender } = user\r\n\r\n    const onInputChange = (e) => {\r\n        setUser({\r\n            ...user, [e.target.name]: e.target.value\r\n        })\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadUser()\r\n    }, []);\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        await axios.put(`http://localhost:8080/user/user/${id}`, user)\r\n        navigate(\"/\")\r\n    };\r\n\r\n    const loadUser = async () => {\r\n        const result = await axios.get(`http://localhost:8080/user/user/${id}`)\r\n        setUser(result.data);\r\n    };\r\n    return (\r\n        <div className='container'>\r\n            <div className='row'>\r\n                <div className='col-md-6 offset-md-3 border rounded p-4 mt-2 shadow'>\r\n                    <h2 className='fw-semibold text-primary text-center'> Update User</h2>\r\n                    <form onSubmit={(e) => onSubmit(e)}>\r\n                        <div className='form-floating mb-3'>\r\n                            <input type={\"text\"}\r\n                                className=\"form-control\"\r\n                                placeholder='Enter your first name'\r\n                                name='userFirstName'\r\n                                value={userFirstName}\r\n                                onChange={(e) => onInputChange(e)}\r\n                            />\r\n                            <label htmlFor='userFirstName' className='form-label'>\r\n                                First Name\r\n                            </label>\r\n                        </div>\r\n                        <div className='form-floating mb-3'>\r\n                            <input type={\"text\"}\r\n                                className=\"form-control\"\r\n                                placeholder='Enter your middle name'\r\n                                name='userMiddleName'\r\n                                value={userMiddleName}\r\n                                onChange={(e) => onInputChange(e)}\r\n                            />\r\n                            <label htmlFor='userMiddleName' className='form-label'>\r\n                                Middle Name\r\n                            </label>\r\n                        </div>\r\n                        <div className='form-floating mb-3'>\r\n                            <input type={\"text\"}\r\n                                className=\"form-control\"\r\n                                placeholder='Enter your last name'\r\n                                name='userLastName'\r\n                                value={userLastName}\r\n                                onChange={(e) => onInputChange(e)}\r\n                            />\r\n                            <label htmlFor='userLastName' className='form-label'>\r\n                                Last Name\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"row g-2 mb-3\">\r\n                            <div className=\"form-floating  col-md-6\">\r\n                                <select className=\"form-select\" name=\"userGender\" value={userGender} onChange={(e) => onInputChange(e)}>\r\n                                    <option defaultValue>Select Gender</option>\r\n                                    <option value=\"1\">Female</option>\r\n                                    <option value=\"2\">Male</option>\r\n                                    <option value=\"3\">Other</option>\r\n                                </select>\r\n                                <label htmlFor=\"userGender\">Gender</label>\r\n                            </div>\r\n                        </div>\r\n                        <button name=\"submit\" type=\"submit\" className='btn btn-outline-primary mx-2'>Submit</button>\r\n                        <Link name=\"cancel\" to=\"/\" className='btn btn-outline-secondary mx-2'>Cancel</Link>\r\n                    </form>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","/workspaces/loanApprovalFronend/src/users/ViewUser.js",["86","87","88","89","90"],[],"import axios from 'axios';\r\nimport React, { useState,useEffect } from 'react';\r\nimport { Link, useNavigate, useParams } from 'react-router-dom';\r\n\r\nexport default function\r\n    () {\r\n\r\n    const { id } = useParams();\r\n    const userId=\"\";\r\n\r\n    const [user, setUser] = useState({\r\n        userId: \"\",\r\n        userFirstName: \"\",\r\n        userMiddleName: \"\",\r\n        userLastName: \"\",\r\n        userGender: \"\",\r\n        useridValid: false,\r\n        phoneNumber: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n        userType: \"\"\r\n    });\r\n\r\n    const [loanapplication, setLoanapplication] = useState([]);\r\n\r\n    useEffect(() => {\r\n        loadUser();\r\n        \r\n    }, []);\r\n\r\n    const loadUser = async () => {\r\n        const result = await axios.get(`http://localhost:8080/user/user/${id}`);\r\n        \r\n        setUser(result.data);\r\n        userId=result.data.id;\r\n        loadApplications();\r\n    };\r\n\r\n    const loadApplications= async ()=>{\r\n        const result = await axios.get(`http://localhost:8080/loanapplication/loanapplications/${user.userId}`);\r\n        console.log(\"loadApplications\");\r\n        console.log(result);\r\n        setLoanapplication(result.data);\r\n        };\r\n        const deleteUser = async (id) => {\r\n            await axios.delete(`http://localhost:8080/user/user/${id}`);\r\n            loadApplications();\r\n        };\r\n    return (\r\n        <div className='container'>\r\n            <div className='row'>\r\n                <div className='col-md-6 offset-md-3 border rounded p-4 mt-2 shadow'>\r\n                    <h2 className='fw-semibold text-primary text-center'> User Details</h2>\r\n                    <div className='card'>\r\n                        <div className='card-header'>Details of User -\r\n                        <h4>{user.userId}</h4>\r\n                            <ul className='list-group list-group-flush'>\r\n                                <li className='list-group-item'>\r\n                                    <b>First : </b>\r\n                                    {user.userFirstName}\r\n                                </li>\r\n                                <li className='list-group-item'>\r\n                                    <b>Middle Name : </b>\r\n                                    {user.userMiddleName}\r\n                                </li>\r\n                                <li className='list-group-item'>\r\n                                    <b>Last Name : </b>\r\n                                    {user.userLastName}\r\n                                </li>\r\n                                <li className='list-group-item'>\r\n                                    <b>Gender : </b>\r\n                                    {user.userGender}\r\n                                </li>\r\n                                <li className='list-group-item'>\r\n                                    <b>Phone Number : </b>\r\n                                    {user.phoneNumber}\r\n                                </li>\r\n                                <li className='list-group-item'>\r\n                                    <b>Email Address : </b>\r\n                                    {user.email}\r\n                                </li>\r\n                                \r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    <Link className='btn btn-primary my-2' to={`/loanapplication/${user.id}`}>Apply For Loan</Link>\r\n                    <Link className='btn btn-secondary my-4' to={\"/\"}>Back to Home</Link>\r\n                </div>\r\n            </div>\r\n            <div className='py-4'>\r\n                <table className=\"table border shadow table-primary table-striped\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">id</th>\r\n                            <th scope=\"col\">Loan Used For</th>\r\n                            <th scope=\"col\">Amount</th>\r\n                            <th scope=\"col\">Tenure</th>\r\n                            <th scope=\"col\">Status</th>\r\n                            <th scope=\"col\"></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            loanapplication.map((app, index) => (\r\n                                <tr>\r\n                                    <th scope=\"row\">{app.applicationId}</th>\r\n                                    <td>{app.loanUsedFor}</td>\r\n                                    <td>{app.loanAmount}</td>\r\n                                    <td>{app.expectedTenure}</td>\r\n                                    <td>{app.status}</td>\r\n                                    <td>\r\n                                        <Link type=\"button\" className=\"btn btn-primary mx-2\"\r\n                                            to={`/viewloanapplication/${app.applicationId}`}>View</Link>\r\n                                        <Link type=\"button\" className=\"btn btn-outline-primary mx-2\"\r\n                                            to={`/updateuser/${user.id}`}>Update</Link>\r\n                                        <button type=\"button\" className=\"btn btn-danger mx-2\"\r\n                                            onClick={() => deleteUser(user.id)}\r\n                                        >Delete</button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))\r\n                        }\r\n\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","/workspaces/loanApprovalFronend/src/users/AddUser.js",["91","92","93","94","95","96","97","98","99"],[],"import axios from 'axios';\r\nimport React, { useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport default function AddUser() {\r\n\r\n    let navigate = useNavigate();\r\n    const [useridCheck, setUseridCheck] = useState(\"\");\r\n    const [passwordMatch, setPasswordMatch] = useState({\r\n        passwordMatchMessage: \"\",\r\n        passwordMatchFlag: \"\"\r\n    });\r\n\r\n    const [useridValidationMessage, setUseridValidationMessage] = useState(\"\");\r\n    //data\r\n    const [user, setUser] = useState({\r\n        userId: \"\",\r\n        userFirstName: \"\",\r\n        userMiddleName: \"\",\r\n        userLastName: \"\",\r\n        userGender: \"\",\r\n        useridValid: false,\r\n        phoneNumber: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n        userType: \"\"\r\n    });\r\n    //reset\r\n    function reset(e) {\r\n        e.preventDefault();\r\n        setUser({\r\n            userId: \"\",\r\n            userFirstName: \"\",\r\n            userMiddleName: \"\",\r\n            userLastName: \"\",\r\n            userGender: \"\",\r\n            useridValid: false,\r\n            phoneNumber: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            confirmPassword: \"\",\r\n            userType: \"\"\r\n        });\r\n    }\r\n    //literal for values\r\n    const {\r\n        userId,\r\n        userFirstName,\r\n        userMiddleName,\r\n        userLastName,\r\n        userGender,\r\n        phoneNumber,\r\n        email,\r\n        password,\r\n        confirmPassword,\r\n        userType\r\n    } = user\r\n    const [open, setOpen] = React.useState(false);\r\n  \r\n    const handleClickToOpen = () => {\r\n      setOpen(true);\r\n    };\r\n    \r\n    const handleToClose =async () => {\r\n        const result = await axios.get(`http://localhost:8080/user/useridExist/${userId}`);\r\n       setOpen(false);\r\n      navigate(`/viewuser/${result.data.id}`);\r\n    };\r\n    const onInputChange = (e) => {\r\n        setUser({\r\n            ...user, [e.target.name]: e.target.value\r\n        });\r\n        //console.log(e);\r\n        if (e.target.name == \"userId\" && e.target.value != \"\") {\r\n            validateUserId(e.target.value);\r\n        };\r\n\r\n        if (e.target.name == \"confirmPassword\" && e.target.value != \"\") {\r\n            confirmPasswordValidator(e.target.value);\r\n        };\r\n\r\n    };\r\n\r\n    async function confirmPasswordValidator(confirmPassword) {\r\n        console.log(user.userId);\r\n        if (confirmPassword == user.password) {\r\n            setPasswordMatch({\r\n                passwordMatchMessage: \"Password Match\",\r\n                passwordMatchFlag: \"green\"\r\n            });\r\n        }\r\n        else {\r\n            setPasswordMatch({\r\n                passwordMatchMessage: \"Password Not Match\",\r\n                passwordMatchFlag: \"red\"\r\n            });\r\n        }\r\n        //    console.log(\"result\");\r\n        //     console.log(\"uuuu\");\r\n    };\r\n\r\n    async function validateUserId(userid) {\r\n        //    console.log(user.userId);\r\n        const result = await axios.get(`http://localhost:8080/user/useridExist/${userid}`);\r\n        //    console.log(\"result\");\r\n        setUseridCheck(result.data.userId);\r\n        //    console.log((result.data.userId).length);\r\n        //    console.log(result.data=='');\r\n        if (result.data == '') {\r\n            setUseridValidationMessage(\"User Id accepted\");\r\n            setUseridCheck(\"green\");\r\n            //      console.log(\"useridValidationMessage\");\r\n        }\r\n        else {\r\n            setUseridValidationMessage(\"User Id not available\");\r\n            setUseridCheck(\"red\");\r\n        }\r\n        //     console.log(\"uuuu\");\r\n    };\r\n\r\n\r\n\r\n    const onSubmit = async (e) => {\r\n        setOpen(true);\r\n        e.preventDefault();\r\n        await axios.post(\"http://localhost:8080/user/user\", user);\r\n    }\r\n    return (\r\n        <div className='container'>\r\n            <div className='row'>\r\n                <div className='col-md-6 offset-md-3 border rounded p-4 mt-2 shadow'>\r\n                    <h2 className='fw-semibold text-primary text-center'> Register User</h2>\r\n                    <form onSubmit={(e) => onSubmit(e)}>\r\n                        <div className='form-floating mb-3'>\r\n                            <input type={\"text\"}\r\n                                className=\"form-control\"\r\n                                placeholder='Enter your first name'\r\n                                name='userId'\r\n                                value={userId}\r\n                                onChange={(e) => onInputChange(e)}\r\n                            />\r\n                            <label htmlFor='userFirstName' className='form-label'>\r\n                                User Id\r\n                            </label>\r\n                            <p style={{ color: useridCheck }}>{useridValidationMessage}</p>\r\n                        </div>\r\n                        <div className='form-floating mb-3'>\r\n                            <input type={\"text\"}\r\n                                className=\"form-control\"\r\n                                placeholder='Enter your Password'\r\n                                name='password'\r\n                                value={password}\r\n                                onChange={(e) => onInputChange(e)}\r\n                            />\r\n                            <label htmlFor='password' className='form-label'>\r\n                                Enter Password\r\n                            </label>\r\n                            <p style={{ color: passwordMatch.passwordMatchFlag }}></p>\r\n                        </div>\r\n                        <div className='form-floating mb-3'>\r\n                            <input type={\"text\"}\r\n                                className=\"form-control\"\r\n                                placeholder='Enter your first name'\r\n                                name='confirmPassword'\r\n                                value={confirmPassword}\r\n                                onChange={(e) => onInputChange(e)}\r\n                            />\r\n                            <label htmlFor='confirmPassword' className='form-label'>\r\n                                Confirm Password\r\n                            </label>\r\n                            <p style={{ color: passwordMatch.passwordMatchFlag }}>{passwordMatch.passwordMatchMessage}</p>\r\n                        </div>\r\n                        <div className='form-floating mb-3'>\r\n                            <input type={\"text\"}\r\n                                className=\"form-control\"\r\n                                placeholder='Enter your first name'\r\n                                name='userFirstName'\r\n                                value={userFirstName}\r\n                                onChange={(e) => onInputChange(e)}\r\n                            />\r\n                            <label htmlFor='userFirstName' className='form-label'>\r\n                                First Name\r\n                            </label>\r\n                        </div>\r\n                        <div className='form-floating mb-3'>\r\n                            <input type={\"text\"}\r\n                                className=\"form-control\"\r\n                                placeholder='Enter your middle name'\r\n                                name='userMiddleName'\r\n                                value={userMiddleName}\r\n                                onChange={(e) => onInputChange(e)}\r\n                            />\r\n                            <label htmlFor='userMiddleName' className='form-label'>\r\n                                Middle Name\r\n                            </label>\r\n                        </div>\r\n                        <div className='form-floating mb-3'>\r\n                            <input type={\"text\"}\r\n                                className=\"form-control\"\r\n                                placeholder='Enter your last name'\r\n                                name='userLastName'\r\n                                value={userLastName}\r\n                                onChange={(e) => onInputChange(e)}\r\n                            />\r\n                            <label htmlFor='userLastName' className='form-label'>\r\n                                Last Name\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"row g-2 mb-3\">\r\n                            <div className=\"form-floating  col-md-6\">\r\n                                <select className=\"form-select\" name=\"userGender\" value={userGender} onChange={(e) => onInputChange(e)}>\r\n                                    <option defaultValue>Select Gender</option>\r\n                                    <option value=\"1\">Female</option>\r\n                                    <option value=\"2\">Male</option>\r\n                                    <option value=\"3\">Other</option>\r\n                                </select>\r\n                                <label htmlFor=\"userGender\">Gender</label>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row g-2 mb-3\">\r\n                            <div className=\"form-floating  col-md-6\">\r\n                                <select className=\"form-select\" name=\"userType\" value={userType} onChange={(e) => onInputChange(e)}>\r\n                                    <option defaultValue>Select User Type</option>\r\n                                    <option value=\"1\">Admin</option>\r\n                                    <option value=\"2\">Private</option>\r\n                                    <option value=\"3\">Guest</option>\r\n                                </select>\r\n                                <label htmlFor=\"userType\">User Type</label>\r\n                            </div>\r\n                        </div>\r\n                        <div className='form-floating mb-3'>\r\n                            <input type={\"text\"}\r\n                                className=\"form-control\"\r\n                                placeholder='Enter Phone Number'\r\n                                name='phoneNumber'\r\n                                value={phoneNumber}\r\n                                onChange={(e) => onInputChange(e)}\r\n                            />\r\n                            <label htmlFor='userLastName' className='form-label'>\r\n                                Phone Number\r\n                            </label>\r\n                        </div>\r\n                        <div className='form-floating mb-3'>\r\n                            <input type={\"text\"}\r\n                                className=\"form-control\"\r\n                                placeholder='Enter Email Id'\r\n                                name='email'\r\n                                value={email}\r\n                                onChange={(e) => onInputChange(e)}\r\n                            />\r\n                            <label htmlFor='userLastName' className='form-label'>\r\n                                Email Id\r\n                            </label>\r\n                        </div>\r\n                        <button name=\"submit\" type=\"submit\" className='btn btn-outline-primary mx-2'>Submit</button>\r\n                        <button name=\"cancel\" type=\"reset\" to=\"/\" onClick={reset} className='btn btn-outline-secondary mx-2'>Reset</button>\r\n                        <Link name=\"cancel\" to=\"/\" className='btn btn-outline-secondary mx-2'>Cancel</Link>\r\n\r\n                        <Dialog open={open} onClose={handleToClose}>\r\n                            <DialogTitle className=\"text-success w-50 p-3 rounded\">{\"Registration Done\"}</DialogTitle>\r\n                            <DialogActions >\r\n                                <Button className=\"btn btn-success\" onClick={handleToClose}\r\n                                    color=\"primary\" autoFocus>\r\n                                    OK\r\n                                </Button>\r\n                            </DialogActions>\r\n                            </Dialog>\r\n                    </form>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","/workspaces/loanApprovalFronend/src/users/LoanApplication.js",["100","101","102","103","104","105","106","107","108"],[],"import axios from 'axios';\r\nimport React, { useState } from 'react';\r\nimport { Link, useNavigate,useParams } from 'react-router-dom';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport default function LoanApplication() {\r\n\r\n    const { userId } = useParams();\r\n    const { id,setId } = useState();\r\n    let navigate = useNavigate();\r\n    const [useridCheck, setUseridCheck] = useState(\"\");\r\n    const [passwordMatch, setPasswordMatch] = useState({\r\n        passwordMatchMessage: \"\",\r\n        passwordMatchFlag: \"\"\r\n    });\r\n\r\n    const [useridValidationMessage, setUseridValidationMessage] = useState(\"\");\r\n    //data\r\n    const [loanapplication, setLoanapplication] = useState({\r\n        userId: \"\",\r\n        loanAmount: \"\",\r\n        expectedTenure:\"\",\r\n        annualIncome: \"\",\r\n        loanUsedFor: \"\",\r\n        maritalStatus: \"\",\r\n        address: \"\",\r\n        city: \"\",\r\n        state: \"\",\r\n        userType: \"\",\r\n        status:\"pending\"\r\n    });\r\n    //reset\r\n    loanapplication.userId=userId;\r\n    function reset(e) {\r\n        e.preventDefault();\r\n        setLoanapplication({\r\n            loanAmount: \"\",\r\n            expectedTenure:\"\",\r\n            annualIncome: \"\",\r\n            loanUsedFor: \"\",\r\n            maritalStatus: \"\",\r\n            address:\"\",\r\n            city: \"\",\r\n            state: \"\",\r\n        });\r\n    }\r\n    //literal for values\r\n    const {\r\n        loanAmount,\r\n        expectedTenure,\r\n        annualIncome,\r\n        loanUsedFor,\r\n        maritalStatus,\r\n        address,\r\n        city,\r\n        state,\r\n        userType,\r\n        status,\r\n    } = loanapplication\r\n    const [open, setOpen] = React.useState(false);\r\n  \r\n    const handleClickToOpen = () => {\r\n      setOpen(true);\r\n    };\r\n    \r\n    const handleToClose =async () => {\r\n        const result = await axios.get(`http://localhost:8080/user/user/${userId}`);\r\n     //   setId(result.data.id);\r\n        console.log()\r\n       setOpen(false);\r\n      navigate(`/viewuser/${result.data.id}`);\r\n    };\r\n    const onInputChange = (e) => {\r\n        setLoanapplication({\r\n            ...loanapplication, [e.target.name]: e.target.value\r\n        });\r\n\r\n    };\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        console.log(loanapplication);\r\n        await axios.post(\"http://localhost:8080/loanapplication/addloanapplication\", loanapplication);\r\n        setOpen(true);\r\n    }\r\n    return (\r\n        <div className='container'>\r\n            <div className='row'>\r\n                <div className='col-md-6 offset-md-3 border rounded p-4 mt-2 shadow'>\r\n                    <h2 className='fw-semibold text-primary text-center'> Apply for Loan</h2>\r\n                    <form onSubmit={(e) => onSubmit(e)}>\r\n                    <h3>{userId}</h3>\r\n                        <div className='form-floating mb-3'>\r\n                            <input type={\"text\"}\r\n                                className=\"form-control\"\r\n                                placeholder='Enter your first name'\r\n                                name='loanAmount'\r\n                                value={loanAmount}\r\n                                onChange={(e) => onInputChange(e)}\r\n                            />\r\n                            <label htmlFor='userFirstName' className='form-label'>\r\n                            Loan Amount in INR\r\n                            </label>\r\n                            <p style={{ color: useridCheck }}>{useridValidationMessage}</p>\r\n                        </div>\r\n                        <div className='form-floating mb-3'>\r\n                            <input type={\"text\"}\r\n                                className=\"form-control\"\r\n                                placeholder='Enter your Password'\r\n                                name='expectedTenure'\r\n                                value={expectedTenure}\r\n                                onChange={(e) => onInputChange(e)}\r\n                            />\r\n                            <label htmlFor='expectedTenure' className='form-label'>\r\n                            Expected Tenure in Months\r\n                            </label>\r\n                            <p style={{ color: passwordMatch.passwordMatchFlag }}></p>\r\n                        </div>\r\n                        <div className='form-floating mb-3'>\r\n                            <input type={\"text\"}\r\n                                className=\"form-control\"\r\n                                placeholder='Enter your first name'\r\n                                name='annualIncome'\r\n                                value={annualIncome}\r\n                                onChange={(e) => onInputChange(e)}\r\n                            />\r\n                            <label htmlFor='annualIncome' className='form-label'>\r\n                            Annual Income in INR\r\n                            </label>\r\n                            <p style={{ color: passwordMatch.passwordMatchFlag }}>{passwordMatch.passwordMatchMessage}</p>\r\n                        </div>\r\n                        <div className='form-floating mb-3'>\r\n                            <input type={\"text\"}\r\n                                className=\"form-control\"\r\n                                placeholder='Enter your first name'\r\n                                name='loanUsedFor'\r\n                                value={loanUsedFor}\r\n                                onChange={(e) => onInputChange(e)}\r\n                            />\r\n                            <label htmlFor='loanUsedFor' className='form-label'>\r\n                            Loan Used For\r\n                            </label>\r\n                        </div>\r\n                        <div className='form-floating mb-3'>\r\n                            <input type={\"text\"}\r\n                                className=\"form-control\"\r\n                                placeholder='Enter your middle name'\r\n                                name='address'\r\n                                value={address}\r\n                                onChange={(e) => onInputChange(e)}\r\n                            />\r\n                            <label htmlFor='address' className='form-label'>\r\n                                Address\r\n                            </label>\r\n                        </div>\r\n                        <div className='form-floating mb-3'>\r\n                            <input type={\"text\"}\r\n                                className=\"form-control\"\r\n                                placeholder='Enter your last name'\r\n                                name='city'\r\n                                value={city}\r\n                                onChange={(e) => onInputChange(e)}\r\n                            />\r\n                            <label htmlFor='city' className='form-label'>\r\n                            City\r\n                            </label>\r\n                        </div>\r\n                        <div className='form-floating mb-3'>\r\n                            <input type={\"text\"}\r\n                                className=\"form-control\"\r\n                                placeholder='Enter your last name'\r\n                                name='state'\r\n                                value={state}\r\n                                onChange={(e) => onInputChange(e)}\r\n                            />\r\n                            <label htmlFor='state' className='form-label'>\r\n                            State\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"row g-2 mb-3\">\r\n                            <div className=\"form-floating  col-md-6\">\r\n                                <select className=\"form-select\" name=\"maritalStatus\" value={maritalStatus} onChange={(e) => onInputChange(e)}>\r\n                                    <option defaultValue>Select Marital Status</option>\r\n                                    <option value=\"1\">Unmarried</option>\r\n                                    <option value=\"2\">Married</option>\r\n                                    <option value=\"3\">Saperated</option>\r\n                                </select>\r\n                                <label htmlFor=\"maritalStatus\">Marital Status</label>\r\n                            </div>\r\n                        </div>\r\n                        <button name=\"submit\" type=\"submit\" className='btn btn-outline-primary mx-2'>Apply</button>\r\n                        <button name=\"cancel\" type=\"reset\" to=\"/\" onClick={reset} className='btn btn-outline-secondary mx-2'>Reset</button>\r\n                        <Link name=\"cancel\" to={`/viewuser/${id}`} className='btn btn-outline-secondary mx-2'>Back to User</Link>\r\n\r\n                        <Dialog open={open} onClose={handleToClose}>\r\n                            <DialogTitle className=\"text-success w-50 p-3 rounded\">{\"Application Successful\"}</DialogTitle>\r\n                            <DialogActions >\r\n                                <Button className=\"btn btn-success\" onClick={handleToClose}\r\n                                    color=\"primary\" autoFocus>\r\n                                    OK\r\n                                </Button>\r\n                            </DialogActions>\r\n                            </Dialog>\r\n                    </form>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","/workspaces/loanApprovalFronend/src/users/viewApplications.js",["109","110","111"],[],"import axios from 'axios';\r\nimport React, { useState,useEffect } from 'react';\r\nimport { Link, useNavigate, useParams } from 'react-router-dom';\r\n\r\nexport default function\r\n    () {\r\n\r\n    const { applicationId } = useParams();\r\n    let navigate = useNavigate();\r\n\r\n        const [loanapplication, setLoanapplication] = useState({\r\n        userId: \"\",\r\n        applicationId:\"\",\r\n        loanAmount: \"\",\r\n        expectedTenure:\"\",\r\n        annualIncome: \"\",\r\n        loanUsedFor: \"\",\r\n        maritalStatus: \"\",\r\n        address: \"\",\r\n        city: \"\",\r\n        state: \"\",\r\n        userType: \"\",\r\n        status:\"pending\"\r\n    });\r\n\r\n    useEffect(() => {\r\n        loadApplications();\r\n    }, []);\r\n\r\n    const handleToClose =async () => {\r\n        console.log(loanapplication);\r\n        const result = await axios.get(`http://localhost:8080/user/user/${loanapplication.userId}`);\r\n        \r\n        console.log(result);\r\n      navigate(`/adminUserDetails/${result.data.id}`);\r\n    };\r\n\r\n    const loadApplications= async ()=>{\r\n        const result = await axios.get(`http://localhost:8080/loanapplication/loanapplication/${applicationId}`);\r\n        setLoanapplication(result.data);\r\n        };\r\n        const deleteUser = async (id) => {\r\n            await axios.delete(`http://localhost:8080/user/user/${id}`);\r\n            loadApplications();\r\n        };\r\n\r\n        const changeStatusApproved=async()=>{\r\n            loanapplication.status=\"Approved\";\r\n            await axios.put(`http://localhost:8080/loanapplication/update/${applicationId}`, loanapplication);\r\n            navigate(`/viewloanapplication/${applicationId}`);\r\n        };\r\n        const changeStatusRejected=async()=>{\r\n            loanapplication.status=\"Rejected\";\r\n            await axios.put(`http://localhost:8080/loanapplication/update/${applicationId}`, loanapplication);\r\n            navigate(`/viewloanapplication/${applicationId}`);\r\n        };\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div className='row'>\r\n                <div className='col-md-6 offset-md-3 border rounded p-4 mt-2 shadow'>\r\n                    <h2 className='fw-semibold text-primary text-center'> Loan Application Details</h2>\r\n                    <div className='card'>\r\n                        <div className='card-header'>\r\n                            <ul className='list-group list-group-flush'>\r\n                                <li className='list-group-item'>\r\n                                    <b>Application Id : </b>\r\n                                    {applicationId}\r\n                                </li>\r\n                                <li className='list-group-item'>\r\n                                    <b>Loan Amount : </b>\r\n                                    {loanapplication.loanAmount}\r\n                                </li>\r\n                                <li className='list-group-item'>\r\n                                    <b>Annual Income : </b>\r\n                                    {loanapplication.annualIncome}\r\n                                </li>\r\n                                <li className='list-group-item'>\r\n                                    <b>Tenure : </b>\r\n                                    {loanapplication.expectedTenure}\r\n                                </li>\r\n                                <li className='list-group-item'>\r\n                                    <b>Loan Used For : </b>\r\n                                    {loanapplication.loanUsedFor}\r\n                                </li>\r\n                                <li className='list-group-item'>\r\n                                    <b>Address : </b>\r\n                                    {loanapplication.address}\r\n                                </li>\r\n                                <li className='list-group-item'>\r\n                                    <b>City : </b>\r\n                                    {loanapplication.city}\r\n                                </li>\r\n                                <li className='list-group-item'>\r\n                                    <b>State : </b>\r\n                                    {loanapplication.state}\r\n                                </li>\r\n                                <li className='list-group-item'>\r\n                                    <b>Status : </b>\r\n                                    {loanapplication.status}\r\n                                </li>\r\n                                <li>\r\n                                <button type=\"button\" onClick={changeStatusApproved} className=\"btn btn-success\">APPROVE</button>\r\n                                </li>\r\n                                <li></li>\r\n                                <li>\r\n                                <button type=\"button\" onClick={changeStatusRejected} className=\"btn btn-danger\">REJECT</button>\r\n                                \r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    <Link className='btn btn-secondary my-4' onClick={handleToClose}>Back to User</Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","/workspaces/loanApprovalFronend/src/users/AdminView.js",["112","113"],[],"import React, { useEffect, useState } from 'react'\r\nimport axios from \"axios\";\r\nimport { Link, useParams } from 'react-router-dom';\r\n\r\nexport default function Home() {\r\n    const [users, setUsers] = useState([]);\r\n    const { id } = useParams();\r\n\r\n    useEffect(() => {\r\n        loadUsers();\r\n    }, []);\r\n\r\n    const loadUsers = async () => {\r\n        const result = await axios.get(\"http://localhost:8080/user/users\");\r\n        console.log(result.data);\r\n        setUsers(result.data);\r\n    };\r\n    const deleteUser = async (id) => {\r\n        await axios.delete(`http://localhost:8080/user/user/${id}`);\r\n        loadUsers();\r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div className='py-4'>\r\n                <table className=\"table border shadow table-primary table-striped\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">id</th>\r\n                            <th scope=\"col\">User Id</th>\r\n                            <th scope=\"col\">Status</th>\r\n                            <th scope=\"col\"></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            users.map((user, index) => (\r\n                                <tr>\r\n                                    <th scope=\"row\">{user.id}</th>\r\n                                    <td>{user.userId}</td>\r\n                                    <td>{user.status}</td>\r\n                                    <td>\r\n                                        <Link type=\"button\" className=\"btn btn-primary mx-2\"\r\n                                            to={`/adminUserDetails/${user.id}`}>View</Link>\r\n                                    </td>\r\n                                </tr>\r\n                            ))\r\n                        }\r\n\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","/workspaces/loanApprovalFronend/src/users/AdminUserDetails.js",["114","115","116","117","118","119","120"],[],"import axios from 'axios';\r\nimport React, { useState,useEffect } from 'react';\r\nimport { Link, useNavigate, useParams } from 'react-router-dom';\r\n\r\nexport default function\r\n    () {\r\n\r\n    const { id } = useParams();\r\n    const userId=\"\";\r\n\r\n    const [user, setUser] = useState({\r\n        userId: \"\",\r\n        userFirstName: \"\",\r\n        userMiddleName: \"\",\r\n        userLastName: \"\",\r\n        userGender: \"\",\r\n        useridValid: false,\r\n        phoneNumber: \"\",\r\n        email: \"\",\r\n        userType: \"\"\r\n    });\r\n\r\n    const [loanapplication, setLoanapplication] = useState([]);\r\n\r\n    useEffect(() => {\r\n        loadUser();\r\n        loadApplications();\r\n    }, []);\r\n\r\n    const loadUser = async () => {\r\n        const result = await axios.get(`http://localhost:8080/user/user/${id}`);\r\n        \r\n        setUser(result.data);\r\n        userId=result.data.userId;\r\n    };\r\n\r\n    const loadApplications= async ()=>{\r\n        const result = await axios.get(`http://localhost:8080/loanapplication/loanapplications/${user.userId}`);\r\n        setLoanapplication(result.data);\r\n        };\r\n        const deleteUser = async (id) => {\r\n            await axios.delete(`http://localhost:8080/user/user/${id}`);\r\n            loadApplications();\r\n        };\r\n    return (\r\n        <div className='container'>\r\n            <div className='row'>\r\n                <div className='col-md-6 offset-md-3 border rounded p-4 mt-2 shadow'>\r\n                    <h2 className='fw-semibold text-primary text-center'> User Details</h2>\r\n                    <div className='card'>\r\n                        <div className='card-header'>Admin Details of User -\r\n                        <h4>{user.userId}</h4>\r\n                            <ul className='list-group list-group-flush'>\r\n                                <li className='list-group-item'>\r\n                                    <b>First : </b>\r\n                                    {user.userFirstName}\r\n                                </li>\r\n                                <li className='list-group-item'>\r\n                                    <b>Middle Name : </b>\r\n                                    {user.userMiddleName}\r\n                                </li>\r\n                                <li className='list-group-item'>\r\n                                    <b>Last Name : </b>\r\n                                    {user.userLastName}\r\n                                </li>\r\n                                <li className='list-group-item'>\r\n                                    <b>Gender : </b>\r\n                                    {user.userGender}\r\n                                </li>\r\n                                <li className='list-group-item'>\r\n                                    <b>Phone Number : </b>\r\n                                    {user.phoneNumber}\r\n                                </li>\r\n                                <li className='list-group-item'>\r\n                                    <b>Email Address : </b>\r\n                                    {user.email}\r\n                                </li>\r\n                                \r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    <Link className='btn btn-secondary my-4' to={`/adminView/${id}`}>Back to Application List</Link>\r\n                </div>\r\n            </div>\r\n            <div className='py-4'>\r\n                <table className=\"table border shadow table-primary table-striped\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">id</th>\r\n                            <th scope=\"col\">Loan Used For</th>\r\n                            <th scope=\"col\">Amount</th>\r\n                            <th scope=\"col\">Tenure</th>\r\n                            <th scope=\"col\">Status</th>\r\n                            <th scope=\"col\"></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            loanapplication.map((app, index) => (\r\n                                <tr>\r\n                                    <th scope=\"row\">{app.applicationId}</th>\r\n                                    <td>{app.loanUsedFor}</td>\r\n                                    <td>{app.loanAmount}</td>\r\n                                    <td>{app.expectedTenure}</td>\r\n                                    <td style={{ color: \r\n                                    (app.status==\"Approved\")?\"Green\":((app.status==\"Rejected\")?\"red\":\"yellow\") }}\r\n                                    >{app.status}</td>\r\n                                    <td>\r\n                                        <Link type=\"button\" className=\"btn btn-primary mx-2\"\r\n                                            to={`/viewloanapplication/${app.applicationId}`}>View</Link>\r\n                                        <button type=\"button\" className=\"btn btn-danger mx-2\"\r\n                                            onClick={() => deleteUser(user.id)}\r\n                                        >Delete</button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))\r\n                        }\r\n\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n",{"ruleId":"121","severity":1,"message":"122","line":4,"column":8,"nodeType":"123","messageId":"124","endLine":4,"endColumn":12},{"ruleId":"121","severity":1,"message":"125","line":3,"column":8,"nodeType":"123","messageId":"124","endLine":3,"endColumn":15},{"ruleId":"121","severity":1,"message":"126","line":7,"column":13,"nodeType":"123","messageId":"124","endLine":7,"endColumn":15},{"ruleId":"121","severity":1,"message":"127","line":8,"column":25,"nodeType":"123","messageId":"124","endLine":8,"endColumn":39},{"ruleId":"121","severity":1,"message":"128","line":9,"column":12,"nodeType":"123","messageId":"124","endLine":9,"endColumn":21},{"ruleId":"121","severity":1,"message":"129","line":9,"column":23,"nodeType":"123","messageId":"124","endLine":9,"endColumn":35},{"ruleId":"121","severity":1,"message":"130","line":11,"column":37,"nodeType":"123","messageId":"124","endLine":11,"endColumn":63},{"ruleId":"131","severity":1,"message":"132","line":44,"column":32,"nodeType":"133","messageId":"134","endLine":44,"endColumn":34},{"ruleId":"135","severity":1,"message":"136","line":31,"column":8,"nodeType":"137","endLine":31,"endColumn":10,"suggestions":"138"},{"ruleId":"121","severity":1,"message":"139","line":3,"column":16,"nodeType":"123","messageId":"124","endLine":3,"endColumn":27},{"ruleId":"140","severity":1,"message":"141","line":5,"column":1,"nodeType":"142","endLine":130,"endColumn":2},{"ruleId":"121","severity":1,"message":"143","line":9,"column":11,"nodeType":"123","messageId":"124","endLine":9,"endColumn":17},{"ruleId":"135","severity":1,"message":"136","line":30,"column":8,"nodeType":"137","endLine":30,"endColumn":10,"suggestions":"144"},{"ruleId":"145","severity":1,"message":"146","line":36,"column":9,"nodeType":"123","messageId":"147","endLine":36,"endColumn":15},{"ruleId":"121","severity":1,"message":"148","line":5,"column":8,"nodeType":"123","messageId":"124","endLine":5,"endColumn":25},{"ruleId":"121","severity":1,"message":"149","line":8,"column":8,"nodeType":"123","messageId":"124","endLine":8,"endColumn":21},{"ruleId":"121","severity":1,"message":"150","line":67,"column":11,"nodeType":"123","messageId":"124","endLine":67,"endColumn":28},{"ruleId":"131","severity":1,"message":"132","line":81,"column":27,"nodeType":"133","messageId":"134","endLine":81,"endColumn":29},{"ruleId":"131","severity":1,"message":"151","line":81,"column":57,"nodeType":"133","messageId":"134","endLine":81,"endColumn":59},{"ruleId":"131","severity":1,"message":"132","line":85,"column":27,"nodeType":"133","messageId":"134","endLine":85,"endColumn":29},{"ruleId":"131","severity":1,"message":"151","line":85,"column":66,"nodeType":"133","messageId":"134","endLine":85,"endColumn":68},{"ruleId":"131","severity":1,"message":"132","line":93,"column":29,"nodeType":"133","messageId":"134","endLine":93,"endColumn":31},{"ruleId":"131","severity":1,"message":"132","line":116,"column":25,"nodeType":"133","messageId":"134","endLine":116,"endColumn":27},{"ruleId":"121","severity":1,"message":"148","line":5,"column":8,"nodeType":"123","messageId":"124","endLine":5,"endColumn":25},{"ruleId":"121","severity":1,"message":"149","line":8,"column":8,"nodeType":"123","messageId":"124","endLine":8,"endColumn":21},{"ruleId":"121","severity":1,"message":"152","line":14,"column":16,"nodeType":"123","messageId":"124","endLine":14,"endColumn":21},{"ruleId":"121","severity":1,"message":"127","line":16,"column":25,"nodeType":"123","messageId":"124","endLine":16,"endColumn":39},{"ruleId":"121","severity":1,"message":"153","line":17,"column":27,"nodeType":"123","messageId":"124","endLine":17,"endColumn":43},{"ruleId":"121","severity":1,"message":"130","line":22,"column":37,"nodeType":"123","messageId":"124","endLine":22,"endColumn":63},{"ruleId":"121","severity":1,"message":"154","line":62,"column":9,"nodeType":"123","messageId":"124","endLine":62,"endColumn":17},{"ruleId":"121","severity":1,"message":"155","line":63,"column":9,"nodeType":"123","messageId":"124","endLine":63,"endColumn":15},{"ruleId":"121","severity":1,"message":"150","line":67,"column":11,"nodeType":"123","messageId":"124","endLine":67,"endColumn":28},{"ruleId":"140","severity":1,"message":"141","line":5,"column":1,"nodeType":"142","endLine":118,"endColumn":2},{"ruleId":"135","severity":1,"message":"156","line":28,"column":8,"nodeType":"137","endLine":28,"endColumn":10,"suggestions":"157"},{"ruleId":"121","severity":1,"message":"158","line":42,"column":15,"nodeType":"123","messageId":"124","endLine":42,"endColumn":25},{"ruleId":"121","severity":1,"message":"126","line":7,"column":13,"nodeType":"123","messageId":"124","endLine":7,"endColumn":15},{"ruleId":"121","severity":1,"message":"158","line":18,"column":11,"nodeType":"123","messageId":"124","endLine":18,"endColumn":21},{"ruleId":"121","severity":1,"message":"139","line":3,"column":16,"nodeType":"123","messageId":"124","endLine":3,"endColumn":27},{"ruleId":"140","severity":1,"message":"141","line":5,"column":1,"nodeType":"142","endLine":124,"endColumn":2},{"ruleId":"121","severity":1,"message":"143","line":9,"column":11,"nodeType":"123","messageId":"124","endLine":9,"endColumn":17},{"ruleId":"135","severity":1,"message":"159","line":28,"column":8,"nodeType":"137","endLine":28,"endColumn":10,"suggestions":"160"},{"ruleId":"145","severity":1,"message":"146","line":34,"column":9,"nodeType":"123","messageId":"147","endLine":34,"endColumn":15},{"ruleId":"131","severity":1,"message":"132","line":106,"column":48,"nodeType":"133","messageId":"134","endLine":106,"endColumn":50},{"ruleId":"131","severity":1,"message":"132","line":106,"column":82,"nodeType":"133","messageId":"134","endLine":106,"endColumn":84},"no-unused-vars","'Home' is defined but never used.","Identifier","unusedVar","'AddUser' is defined but never used.","'id' is assigned a value but never used.","'setUseridCheck' is assigned a value but never used.","'validUser' is assigned a value but never used.","'setvalidUser' is assigned a value but never used.","'setUseridValidationMessage' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadUser'. Either include it or remove the dependency array.","ArrayExpression",["161"],"'useNavigate' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'userId' is assigned a value but never used.",["162"],"no-const-assign","'userId' is constant.","const","'DialogContentText' is defined but never used.","'DialogContent' is defined but never used.","'handleClickToOpen' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'setId' is assigned a value but never used.","'setPasswordMatch' is assigned a value but never used.","'userType' is assigned a value but never used.","'status' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadApplications'. Either include it or remove the dependency array.",["163"],"'deleteUser' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'loadApplications' and 'loadUser'. Either include them or remove the dependency array.",["164"],{"desc":"165","fix":"166"},{"desc":"165","fix":"167"},{"desc":"168","fix":"169"},{"desc":"170","fix":"171"},"Update the dependencies array to be: [loadUser]",{"range":"172","text":"173"},{"range":"174","text":"173"},"Update the dependencies array to be: [loadApplications]",{"range":"175","text":"176"},"Update the dependencies array to be: [loadApplications, loadUser]",{"range":"177","text":"178"},[749,751],"[loadUser]",[701,703],[694,696],"[loadApplications]",[667,669],"[loadApplications, loadUser]"]